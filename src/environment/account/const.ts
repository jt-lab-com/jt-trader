export const ACCOUNT_PARAMS_LIST = 'ACCOUNT_PARAMS_LIST';
export const ACCOUNT_LIMIT_RUNTIMES = 'ACCOUNT_LIMIT_RUNTIMES';
export const ACCOUNT_LIMIT_OPTIMIZER_SCENARIO = 'ACCOUNT_LIMIT_OPTIMIZER_SCENARIO';
export const ACCOUNT_LIMIT_TESTER_MAX_PROCESSES = 'ACCOUNT_LIMIT_TESTER_MAX_PROCESSES';
export const ACCOUNT_LIMIT_TESTER_EXEC_TIMEOUT = 'ACCOUNT_LIMIT_TESTER_EXEC_TIMEOUT'; // Time limit, sec
export const ACCOUNT_LIMIT_TESTER_MAX_MEMORY = 'ACCOUNT_LIMIT_TESTER_MAX_MEMORY'; // Memory limit, Mb
export const ACCOUNT_LIMIT_REPORT_MAX_SIZE = 'ACCOUNT_LIMIT_REPORT_MAX_SIZE'; // Report size, Mb
export const ACCOUNT_LIMIT_API_CALL_PER_SEC = 'ACCOUNT_LIMIT_API_CALL_PER_SEC';
export const ACCOUNT_AVAILABLE_STORE_BUNDLES = 'ACCOUNT_AVAILABLE_STORE_BUNDLES';
export const ACCOUNT_DEVELOPER_ACCESS = 'ACCOUNT_DEVELOPER_ACCESS';
export const ACCOUNT_LIMIT_ORDER_BOOK = 'ACCOUNT_LIMIT_ORDER_BOOK';

export const DEFAULT_VALUES = {
  [ACCOUNT_LIMIT_RUNTIMES]: process.env.ACCOUNT_LIMIT_RUNTIMES ? +process.env.ACCOUNT_LIMIT_RUNTIMES : 5,
  [ACCOUNT_LIMIT_OPTIMIZER_SCENARIO]: process.env.ACCOUNT_LIMIT_OPTIMIZER_SCENARIO
    ? +process.env.ACCOUNT_LIMIT_OPTIMIZER_SCENARIO
    : 15,
  [ACCOUNT_LIMIT_API_CALL_PER_SEC]: process.env.ACCOUNT_LIMIT_API_CALL_PER_SEC
    ? +process.env.ACCOUNT_LIMIT_API_CALL_PER_SEC
    : 5,
  [ACCOUNT_LIMIT_TESTER_MAX_PROCESSES]: process.env.ACCOUNT_LIMIT_TESTER_MAX_PROCESSES
    ? +process.env.ACCOUNT_LIMIT_TESTER_MAX_PROCESSES
    : 5,
  [ACCOUNT_AVAILABLE_STORE_BUNDLES]: process.env.ACCOUNT_AVAILABLE_STORE_BUNDLES ?? '[]',
  [ACCOUNT_DEVELOPER_ACCESS]: process.env.ACCOUNT_DEVELOPER_ACCESS === 'true' ?? false,
  [ACCOUNT_LIMIT_TESTER_MAX_MEMORY]: process.env.ACCOUNT_LIMIT_TESTER_MAX_MEMORY
    ? +process.env.ACCOUNT_LIMIT_TESTER_MAX_MEMORY
    : 1024,
  [ACCOUNT_LIMIT_TESTER_EXEC_TIMEOUT]: process.env.ACCOUNT_LIMIT_TESTER_EXEC_TIMEOUT
    ? +process.env.ACCOUNT_LIMIT_TESTER_EXEC_TIMEOUT
    : 300, // sec
  [ACCOUNT_LIMIT_REPORT_MAX_SIZE]: process.env.ACCOUNT_LIMIT_REPORT_MAX_SIZE
    ? +process.env.ACCOUNT_LIMIT_REPORT_MAX_SIZE
    : 1, // Mb
  [ACCOUNT_LIMIT_ORDER_BOOK]: process.env.ACCOUNT_LIMIT_ORDER_BOOK ? +process.env.ACCOUNT_LIMIT_ORDER_BOOK : 5,
};

export const TESTER_DEFAULT_START = 'start';
export const TESTER_DEFAULT_END = 'end';
export const TESTER_DEFAULT_MARKET_ORDER_SPREAD = 'marketOrderSpread';
export const TESTER_DEFAULT_MAKER_FEE = 'makerFee';
export const TESTER_DEFAULT_TAKER_FEE = 'takerFee';
export const TESTER_DEFAULT_LEVERAGE = 'defaultLeverage';
export const TESTER_DEFAULT_TIMEFRAME = 'timeframe';
export const TESTER_DEFAULT_HEDGE_MODE = 'hedgeMode';
export const TESTER_DEFAULT_SYMBOLS = 'symbols';
export const TESTER_DEFAULT_EXCHANGE = 'exchange';
export const TESTER_DEFAULT_BALANCE = 'balance';
export const TESTER_SCENARIO_DEFAULTS = {
  [TESTER_DEFAULT_START]: new Date(new Date().getFullYear() - 1, new Date().getMonth() - 1, 10)
    .toISOString()
    .slice(0, 7),
  [TESTER_DEFAULT_END]: new Date(new Date().getFullYear(), new Date().getMonth() - 1, 10).toISOString().slice(0, 7),
  [TESTER_DEFAULT_MARKET_ORDER_SPREAD]: 0.0001,
  [TESTER_DEFAULT_MAKER_FEE]: 0.0002,
  [TESTER_DEFAULT_TAKER_FEE]: 0.0004,
  [TESTER_DEFAULT_LEVERAGE]: 50,
  [TESTER_DEFAULT_TIMEFRAME]: 1,
  [TESTER_DEFAULT_HEDGE_MODE]: true,
  [TESTER_DEFAULT_SYMBOLS]: ['LTC/USDT', 'SOL/USDT', 'XRP/USDT'],
  [TESTER_DEFAULT_EXCHANGE]: 'gateio',
  [TESTER_DEFAULT_BALANCE]: 1000,
};
