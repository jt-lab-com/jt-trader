import LoadingButton from "@mui/lab/LoadingButton";import Card from "@mui/material/Card";import CardContent from "@mui/material/CardContent";import Container from "@mui/material/Container";import MenuItem from "@mui/material/MenuItem";import Stack from "@mui/material/Stack";import TextField from "@mui/material/TextField";import { ChangeEvent, FC, useState } from "react";import { useBuildStrategy } from "@/features/strategy";import { StrategyContent, useStrategy } from "@/entities/strategy";import { useAuth } from "@/entities/user";import { Iconify } from "@/shared/ui/iconify";import { Page } from "@/shared/ui/page";interface StrategyFilesPageProps {  title: string;}const StrategyFilesPage: FC<StrategyFilesPageProps> = (props) => {  const { title } = props;  const { isGuest } = useAuth();  const { localStrategies } = useStrategy();  const { handleBuildBundle, isLoading } = useBuildStrategy();  const [selectedStrategyPath, setSelectedStrategyPath] = useState<string>("");  const handleStrategyChange = (e: ChangeEvent<HTMLInputElement>) => {    setSelectedStrategyPath(e.target.value);  };  const handleBuild = () => {    if (!selectedStrategyPath) return;    void handleBuildBundle(selectedStrategyPath);  };  return (    <Page title={title}>      <Container>        <Card>          <CardContent>            <Stack gap={3}>              <Stack direction={"row"} gap={3} justifyContent={"flex-start"} alignItems={"center"}>                <TextField                  sx={{ width: { xs: "auto", md: 300 } }}                  select                  label={"Select strategy"}                  value={selectedStrategyPath}                  onChange={handleStrategyChange}                  size={"small"}                  fullWidth                >                  {localStrategies.map((strategy) => (                    <MenuItem key={strategy.id} value={strategy.path}>                      {strategy.name}                    </MenuItem>                  ))}                </TextField>                <LoadingButton                  variant={"outlined"}                  startIcon={<Iconify width={18} icon={"solar:box-minimalistic-bold-duotone"} />}                  color={"primary"}                  onClick={handleBuild}                  disabled={!selectedStrategyPath || isGuest}                  loading={isLoading}                >                  Build Bundle                </LoadingButton>              </Stack>              {selectedStrategyPath && <StrategyContent height={500} strategyPath={selectedStrategyPath} />}            </Stack>          </CardContent>        </Card>      </Container>    </Page>  );};export default StrategyFilesPage;